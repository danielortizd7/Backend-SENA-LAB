/**
 * PRUEBA CON TOKEN V√ÅLIDO
 * Usa este script para probar notificaciones con un token FCM v√°lido
 */

const axios = require('axios');

const BACKEND_URL = 'https://backend-registro-muestras.onrender.com';

// Funci√≥n para probar con un token espec√≠fico
async function probarConToken(token) {
    console.log('üöÄ === PRUEBA CON TOKEN V√ÅLIDO ===');
    console.log(`üîë Token: ${token.substring(0, 20)}...`);
    console.log(`üåê Backend: ${BACKEND_URL}`);
    
    try {
        // Paso 1: Registrar token
        console.log('\n1Ô∏è‚É£ Registrando token...');
        const registerResponse = await axios.post(`${BACKEND_URL}/api/notificaciones/register-token`, {
            token: token,
            clienteDocumento: '1235467890',
            platform: 'android'
        });
        
        console.log('‚úÖ Token registrado exitosamente');
        console.log('üìã Respuesta:', registerResponse.data);
        
        // Paso 2: Enviar notificaci√≥n de prueba
        console.log('\n2Ô∏è‚É£ Enviando notificaci√≥n de prueba...');
        const notificationResponse = await axios.post(`${BACKEND_URL}/api/notificaciones/send-test`, {
            clienteDocumento: '1235467890',
            titulo: 'üéâ ¬°Prueba Exitosa!',
            mensaje: 'Las notificaciones FCM est√°n funcionando correctamente.',
            muestraId: 'TEST-' + Date.now()
        });
        
        console.log('‚úÖ Notificaci√≥n enviada exitosamente');
        console.log('üìã Respuesta:', notificationResponse.data);
        
        console.log('\nüéØ RESULTADO:');
        console.log('=============');
        console.log('‚úÖ Token v√°lido y funcional');
        console.log('‚úÖ Backend procesando correctamente');
        console.log('‚úÖ Firebase configurado correctamente');
        console.log('üì± Revisa tu dispositivo Android para ver la notificaci√≥n');
        
    } catch (error) {
        console.log('‚ùå Error en la prueba:');
        console.log('   Status:', error.response?.status);
        console.log('   Error:', error.response?.data?.error || error.message);
        console.log('   Data:', error.response?.data);
        
        if (error.response?.status === 400) {
            console.log('\nüí° POSIBLES CAUSAS:');
            console.log('- Token FCM inv√°lido o expirado');
            console.log('- Formato de token incorrecto');
            console.log('- El token no pertenece a tu proyecto Firebase');
        }
    }
}

// Funci√≥n para ayuda
function mostrarAyuda() {
    console.log('üîç === C√ìMO USAR ESTE SCRIPT ===');
    console.log('================================');
    console.log('');
    console.log('1. Obt√©n un token FCM v√°lido desde tu app Android');
    console.log('2. Ejecuta: node probar-token-valido.js "tu-token-completo"');
    console.log('');
    console.log('üì± C√ìMO OBTENER EL TOKEN EN ANDROID:');
    console.log('===================================');
    console.log('FirebaseMessaging.getInstance().getToken()');
    console.log('    .addOnCompleteListener(task -> {');
    console.log('        String token = task.getResult();');
    console.log('        Log.d("FCM", "Token: " + token);');
    console.log('    });');
    console.log('');
    console.log('üìã EJEMPLO DE USO:');
    console.log('==================');
    console.log('node probar-token-valido.js "dKj2k3l4m5n6o7p8q9r0s1t2u3v4w5x6y7z8..."');
}

// Obtener token desde argumentos de l√≠nea de comandos
const token = process.argv[2];

if (!token) {
    console.log('‚ùå Error: No se proporcion√≥ token');
    mostrarAyuda();
    process.exit(1);
}

if (token.length < 20) {
    console.log('‚ùå Error: Token demasiado corto (posiblemente inv√°lido)');
    mostrarAyuda();
    process.exit(1);
}

// Ejecutar prueba
probarConToken(token).catch(console.error);
