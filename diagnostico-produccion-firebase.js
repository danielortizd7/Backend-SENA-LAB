const axios = require('axios');

async function diagnosticarFirebaseProduccion() {
    try {
        console.log('üîç Diagnosticando configuraci√≥n de Firebase en producci√≥n...\n');
        
        const response = await axios.get('https://backend-registro-muestras.onrender.com/api/notificaciones/diagnostico-clave-firebase');
        
        console.log('üìä AN√ÅLISIS DE CLAVE PRIVADA EN PRODUCCI√ìN:');
        console.log('='.repeat(60));
        
        const { analysis, recommendations } = response.data;
        
        // Informaci√≥n b√°sica
        console.log(`üåç Entorno: ${analysis.environment}`);
        console.log(`üìè Longitud de clave: ${analysis.keyLength} caracteres`);
        console.log(`üîê Tiene clave privada: ${analysis.hasPrivateKey ? '‚úÖ' : '‚ùå'}`);
        console.log('');
        
        // Formato de la clave
        console.log('üìù FORMATO DE LA CLAVE:');
        console.log(`   Comienza con BEGIN PRIVATE KEY: ${analysis.startsWithBeginPrivate ? '‚úÖ' : '‚ùå'}`);
        console.log(`   Termina con END PRIVATE KEY: ${analysis.endsWithEndPrivate ? '‚úÖ' : '‚ùå'}`);
        console.log(`   Tiene escapes \\n: ${analysis.hasNewlineEscapes ? '‚ö†Ô∏è  S√ç' : '‚úÖ NO'}`);
        console.log(`   Tiene saltos reales: ${analysis.hasActualNewlines ? '‚úÖ S√ç' : '‚ùå NO'}`);
        console.log(`   N√∫mero de l√≠neas: ${analysis.numberOfLines}`);
        console.log(`   Tiene comillas extra: ${analysis.hasQuotes ? '‚ùå S√ç' : '‚úÖ NO'}`);
        console.log('');
        
        // Problemas comunes
        console.log('üö® PROBLEMAS DETECTADOS:');
        const issues = analysis.commonIssues;
        console.log(`   Double escaping (\\\\n): ${issues.doubleEscaped ? '‚ùå S√ç' : '‚úÖ NO'}`);
        console.log(`   Comillas extras: ${issues.extraQuotes ? '‚ùå S√ç' : '‚úÖ NO'}`);
        console.log(`   Line endings incorrectos: ${issues.wrongLineEndings ? '‚ùå S√ç' : '‚úÖ NO'}`);
        console.log(`   Espacios en clave: ${issues.spacesInKey ? '‚ùå S√ç' : '‚úÖ NO'}`);
        console.log('');
        
        // Primeros y √∫ltimos caracteres
        console.log('üîç MUESTRA DE LA CLAVE:');
        console.log(`   Primeros 50 chars: "${analysis.firstChars}"`);
        console.log(`   √öltimos 50 chars: "${analysis.lastChars}"`);
        console.log('');
        
        // Recomendaciones
        console.log('üí° RECOMENDACIONES:');
        if (recommendations.shouldRemoveQuotes) {
            console.log('   ‚ùå ELIMINAR COMILLAS del inicio y final');
        }
        if (recommendations.shouldReplaceEscapes) {
            console.log('   ‚ùå REEMPLAZAR \\n con saltos de l√≠nea reales');
        }
        if (recommendations.shouldFixDoubleEscaping) {
            console.log('   ‚ùå CORREGIR double escaping (\\\\n ‚Üí \\n)');
        }
        console.log('');
        
        // Formato correcto
        console.log('‚úÖ FORMATO CORRECTO PARA RENDER:');
        console.log('   En la variable de entorno debe estar as√≠:');
        console.log('   -----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC...\\n-----END PRIVATE KEY-----');
        console.log('');
        console.log('üîß PASOS PARA CORREGIR EN RENDER:');
        console.log('   1. Ve al dashboard de Render');
        console.log('   2. Selecciona tu servicio backend-sena-lab');
        console.log('   3. Ve a Environment');
        console.log('   4. Edita FIREBASE_PRIVATE_KEY');
        console.log('   5. Pega la clave SIN comillas extras');
        console.log('   6. Aseg√∫rate de que tenga \\n en lugar de saltos reales');
        console.log('   7. Redeploy el servicio');
        
    } catch (error) {
        console.error('‚ùå Error al diagnosticar:', error.message);
        if (error.response) {
            console.error('Respuesta del servidor:', error.response.data);
        }
    }
}

diagnosticarFirebaseProduccion();
