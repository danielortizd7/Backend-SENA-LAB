const https = require('https');

console.log('üîç VERIFICACI√ìN DE CONFIGURACI√ìN EN PRODUCCI√ìN');
console.log('=============================================');

// URL de tu backend actual
const BACKEND_URL = 'https://backend-registro-muestras.onrender.com';

function makeRequest(url, options = {}) {
    return new Promise((resolve, reject) => {
        const req = https.request(url, options, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                try {
                    resolve({
                        status: res.statusCode,
                        data: JSON.parse(data),
                        headers: res.headers
                    });
                } catch (error) {
                    resolve({
                        status: res.statusCode,
                        data: data,
                        headers: res.headers,
                        parseError: true
                    });
                }
            });
        });
        
        req.on('error', reject);
        req.end();
    });
}

async function verificarConfiguracion() {
    try {
        console.log('\nüìä AN√ÅLISIS DE LOGS:');
        console.log('‚úÖ Private key present: true');
        console.log('‚úÖ Private key length: 1703');
        console.log('‚úÖ Private key starts with BEGIN: true');
        console.log('‚úÖ Private key ends with END: true');
        console.log('‚ùå No aparece "üîß Usando FIREBASE_PRIVATE_KEY_BASE64"');
        
        console.log('\nüîç DIAGN√ìSTICO:');
        console.log('1. La configuraci√≥n Base64 FUNCION√ì (no hay error RS256)');
        console.log('2. Pero puede estar usando la variable tradicional');
        console.log('3. El nuevo error es 404 /batch de Firebase');
        
        console.log('\nüí° POSIBLES CAUSAS DEL ERROR 404 /batch:');
        console.log('1. ‚ùå Project ID incorrecto en Firebase Console');
        console.log('2. ‚ùå Token FCM v√°lido pero proyecto deshabilitado');
        console.log('3. ‚ùå Cloud Messaging API no habilitada');
        console.log('4. ‚ùå Regi√≥n incorrecta en Firebase');
        
        console.log('\nüîß VERIFICACIONES NECESARIAS:');
        console.log('1. Confirmar Project ID en Firebase Console');
        console.log('2. Verificar que Cloud Messaging est√© habilitado');
        console.log('3. Comprobar que el token FCM sea v√°lido');
        console.log('4. Revisar si la variable BASE64 se est√° usando');
        
        console.log('\nüìù PASOS INMEDIATOS:');
        console.log('1. Ve a Firebase Console ‚Üí Project Settings');
        console.log('2. Confirma Project ID: aqualab-83795');
        console.log('3. Ve a Cloud Messaging y verifica que est√© habilitado');
        console.log('4. Regenera un token FCM desde la app Android');
        console.log('5. Prueba con el nuevo token');
        
        console.log('\n‚úÖ PROGRESO CONFIRMADO:');
        console.log('- Servidor funcionando correctamente');
        console.log('- Base64 elimin√≥ el error RS256');
        console.log('- Firebase se est√° inicializando');
        console.log('- Tokens v√°lidos detectados');
        console.log('- Solo falta resolver el acceso a Cloud Messaging');
        
        console.log('\n‚ö° PRUEBA R√ÅPIDA:');
        console.log('1. Regenera token FCM en la app');
        console.log('2. Registra el nuevo token');
        console.log('3. Cambia el estado de una muestra');
        console.log('4. Si persiste, revisar Firebase Console');
        
    } catch (error) {
        console.error('‚ùå Error en verificaci√≥n:', error.message);
    }
}

// Tambi√©n crear endpoint de diagn√≥stico temporal
console.log('\nüõ†Ô∏è ENDPOINT DE DIAGN√ìSTICO TEMPORAL:');
console.log('Puedes crear un endpoint temporal para verificar:');
console.log(`${BACKEND_URL}/api/debug/firebase-config`);

verificarConfiguracion();
