#!/usr/bin/env node

/**
 * Script para demostrar c√≥mo probar TODAS las rutas de cambio de estado
 * en producci√≥n y verificar que env√≠en notificaciones
 */

console.log('üß™ GU√çA DE PRUEBAS: Cambios de Estado en Producci√≥n');
console.log('==================================================');
console.log('');

console.log('üéØ OBJETIVO:');
console.log('Verificar que TODOS los cambios de estado env√≠en notificaciones autom√°ticamente');
console.log('');

console.log('üì± PROBLEMA OBSERVADO:');
console.log('Solo aparecen notificaciones para "Cotizaci√≥n Aceptada"');
console.log('Faltan notificaciones para otros estados como "Recibida", "En an√°lisis", "Finalizada"');
console.log('');

console.log('üîç RUTAS A PROBAR:');
console.log('==================');
console.log('');

// Datos de ejemplo (reemplazar con datos reales)
const BASE_URL = 'https://backend-registro-muestras.onrender.com';
const MUESTRA_ID = 'PF250705006'; // ID de muestra real
const TOKEN = 'tu_token_jwt_aqui'; // Token de administrador

console.log('1. ‚úÖ ACEPTAR COTIZACI√ìN (ya funciona):');
console.log(`   POST ${BASE_URL}/api/cambios-estado/${MUESTRA_ID}/aceptar-cotizacion`);
console.log('   Headers: { "Authorization": "Bearer ' + TOKEN + '" }');
console.log('   Body: (vac√≠o)');
console.log('   üìß Resultado: Deber√≠a enviar notificaci√≥n "‚úÖ Cotizaci√≥n Aceptada"');
console.log('');

console.log('2. üîÑ CAMBIAR A "RECIBIDA":');
console.log(`   PUT ${BASE_URL}/api/cambios-estado/${MUESTRA_ID}`);
console.log('   Headers: { "Authorization": "Bearer ' + TOKEN + '", "Content-Type": "application/json" }');
console.log('   Body: { "nuevoEstado": "Recibida" }');
console.log('   üìß Resultado: Deber√≠a enviar notificaci√≥n "üì¶ Muestra Recibida"');
console.log('');

console.log('3. üî¨ CAMBIAR A "EN AN√ÅLISIS":');
console.log(`   PUT ${BASE_URL}/api/cambios-estado/${MUESTRA_ID}`);
console.log('   Headers: { "Authorization": "Bearer ' + TOKEN + '", "Content-Type": "application/json" }');
console.log('   Body: { "nuevoEstado": "En an√°lisis" }');
console.log('   üìß Resultado: Deber√≠a enviar notificaci√≥n "üî¨ An√°lisis en Proceso"');
console.log('');

console.log('4. ‚úÖ CAMBIAR A "FINALIZADA":');
console.log(`   PUT ${BASE_URL}/api/cambios-estado/${MUESTRA_ID}`);
console.log('   Headers: { "Authorization": "Bearer ' + TOKEN + '", "Content-Type": "application/json" }');
console.log('   Body: { "nuevoEstado": "Finalizada" }');
console.log('   üìß Resultado: Deber√≠a enviar notificaci√≥n "‚úÖ Resultados Disponibles"');
console.log('');

console.log('üîß COMANDOS CURL LISTOS PARA USAR:');
console.log('==================================');
console.log('');

console.log('# 1. Obtener token de autenticaci√≥n:');
console.log(`curl -X POST "${BASE_URL}/api/auth/login" \\`);
console.log('  -H "Content-Type: application/json" \\');
console.log('  -d \'{"documento": "12345678", "password": "tu_password"}\'');
console.log('');

console.log('# 2. Probar cambio a Recibida:');
console.log(`curl -X PUT "${BASE_URL}/api/cambios-estado/${MUESTRA_ID}" \\`);
console.log('  -H "Authorization: Bearer TU_TOKEN_AQUI" \\');
console.log('  -H "Content-Type: application/json" \\');
console.log('  -d \'{"nuevoEstado": "Recibida"}\'');
console.log('');

console.log('# 3. Probar cambio a En an√°lisis:');
console.log(`curl -X PUT "${BASE_URL}/api/cambios-estado/${MUESTRA_ID}" \\`);
console.log('  -H "Authorization: Bearer TU_TOKEN_AQUI" \\');
console.log('  -H "Content-Type: application/json" \\');
console.log('  -d \'{"nuevoEstado": "En an√°lisis"}\'');
console.log('');

console.log('# 4. Probar cambio a Finalizada:');
console.log(`curl -X PUT "${BASE_URL}/api/cambios-estado/${MUESTRA_ID}" \\`);
console.log('  -H "Authorization: Bearer TU_TOKEN_AQUI" \\');
console.log('  -H "Content-Type: application/json" \\');
console.log('  -d \'{"nuevoEstado": "Finalizada"}\'');
console.log('');

console.log('üìä QU√â VERIFICAR EN LOS LOGS DE RENDER:');
console.log('======================================');
console.log('Despu√©s de cada comando, deber√≠as ver en los logs:');
console.log('');
console.log('‚úÖ 1. Request recibido:');
console.log('   üîÑ Cambiando estado de muestra MUESTRA_ID a: NUEVO_ESTADO');
console.log('');
console.log('‚úÖ 2. Notificaci√≥n enviada:');
console.log('   üì® Enviando notificaci√≥n de cambio de estado:');
console.log('   üì± Encontrados X dispositivos activos para cliente...');
console.log('   üìß Enviando notificaciones individuales...');
console.log('   ‚úÖ Enviado exitosamente: projects/aqualab-83795/messages/...');
console.log('');
console.log('‚úÖ 3. Respuesta exitosa:');
console.log('   ‚úÖ Estado actualizado exitosamente con notificaci√≥n autom√°tica');
console.log('');

console.log('üéØ RESULTADO ESPERADO:');
console.log('======================');
console.log('üì± En la app Android deber√≠as ver notificaciones para:');
console.log('');
console.log('üì¶ "Muestra Recibida" - Su muestra PF250705006 ha sido recibida...');
console.log('üî¨ "An√°lisis en Proceso" - Su muestra PF250705006 est√° siendo analizada...');
console.log('‚úÖ "Resultados Disponibles" - ¬°Sus resultados est√°n listos!...');
console.log('');

console.log('üö® SI NO FUNCIONAN:');
console.log('===================');
console.log('1. ‚ùå Si no aparecen en logs ‚Üí El frontend no est√° usando las rutas correctas');
console.log('2. ‚ùå Si aparecen en logs pero no llegan notificaciones ‚Üí Problema de FCM');
console.log('3. ‚ùå Si da error de autenticaci√≥n ‚Üí Token inv√°lido o expirado');
console.log('');

console.log('üí° RECOMENDACI√ìN:');
console.log('=================');
console.log('1. üß™ Prueba estos comandos manualmente con curl/Postman');
console.log('2. üìä Revisa los logs de Render durante las pruebas');
console.log('3. üîç Si funcionan manualmente, el problema est√° en el frontend');
console.log('4. üõ†Ô∏è Si no funcionan, hay que debuggear el backend');
console.log('');

console.log('üîó FRONTEND QUE DEBER√çA USAR:');
console.log('=============================');
console.log('Para TODOS los cambios de estado (excepto aceptar cotizaci√≥n):');
console.log('   PUT /api/cambios-estado/:id');
console.log('   Body: { "nuevoEstado": "NUEVO_ESTADO" }');
console.log('');
console.log('Solo para aceptar cotizaciones:');
console.log('   PUT /api/cambios-estado/:id/aceptar-cotizacion');
console.log('   Body: (vac√≠o)');
console.log('');

console.log('üéâ ¬°ESPERAMOS QUE TODOS LOS CAMBIOS ENV√çEN NOTIFICACIONES!');
console.log('=========================================================');
