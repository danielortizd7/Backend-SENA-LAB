const axios = require('axios');

async function probarNotificacionesSinEmojis() {
    try {
        console.log('üß™ Probando notificaciones SIN emojis en t√≠tulos...\n');
        
        // 1. Registrar token
        console.log('1Ô∏è‚É£ Registrando token FCM...');
        const registerResponse = await axios.post('https://backend-registro-muestras.onrender.com/api/notificaciones/registrar-token', {
            token: 'c3lMci17RlWk2zuXAMHx8I:APA91bH5dKZgJVWJKA5uO9gQRgJ4Y6X1c9_wYUoGbQX1yNxKKRrqUPe5Kd_1sOjNGWZx2L3M7nH8F',
            clienteDocumento: '1235467890',
            platform: 'android'
        });
        
        if (registerResponse.data.success) {
            console.log('‚úÖ Token registrado exitosamente\n');
        }
        
        // 2. Probar notificaci√≥n con t√≠tulo limpio
        console.log('2Ô∏è‚É£ Enviando notificaci√≥n con t√≠tulo SIN emojis...');
        const testResponse = await axios.post('https://backend-registro-muestras.onrender.com/api/notificaciones-test/local', {
            clienteDocumento: '1235467890',
            mensaje: 'Prueba de notificaci√≥n con t√≠tulo limpio (sin emojis)'
        });
        
        console.log('‚úÖ NOTIFICACI√ìN ENVIADA con estructura limpia:');
        console.log('üì® T√≠tulo esperado: "Notificaci√≥n de Prueba" (SIN emojis)');
        console.log('üìù Mensaje: Prueba de notificaci√≥n con t√≠tulo limpio');
        console.log('');
        
        // 3. Probar notificaciones de estados espec√≠ficos
        const estados = [
            { estado: 'En Cotizaci√≥n', titulo: 'Cotizaci√≥n en Proceso' },
            { estado: 'Aceptada', titulo: 'Cotizaci√≥n Aceptada' },
            { estado: 'Recibida', titulo: 'Muestra Recibida' },
            { estado: 'En an√°lisis', titulo: 'An√°lisis en Proceso' },
            { estado: 'Finalizada', titulo: 'Resultados Disponibles' },
            { estado: 'Rechazada', titulo: 'Muestra Rechazada' }
        ];
        
        console.log('3Ô∏è‚É£ Probando todos los estados con t√≠tulos limpios...\n');
        
        for (let i = 0; i < estados.length; i++) {
            const estado = estados[i];
            console.log(`üìã Probando estado: ${estado.estado}`);
            console.log(`   T√≠tulo esperado: "${estado.titulo}" (SIN emojis)`);
            
            // Esperar 2 segundos entre notificaciones
            await new Promise(resolve => setTimeout(resolve, 2000));
        }
        
        console.log('\nüéØ VERIFICACI√ìN EN EL DISPOSITIVO M√ìVIL:');
        console.log('‚úÖ Los t√≠tulos NO deben tener emojis (üíº, ‚úÖ, üì¶, üî¨, ‚ùå)');
        console.log('‚úÖ Los t√≠tulos deben ser texto limpio');
        console.log('‚úÖ Las notificaciones deben aparecer en la barra de notificaciones');
        console.log('‚úÖ Las notificaciones deben guardarse en la secci√≥n interna de la app');
        console.log('');
        console.log('üì± Si las notificaciones ahora se guardan correctamente en la app,');
        console.log('   el problema estaba en los emojis de los t√≠tulos.');
        
    } catch (error) {
        console.error('‚ùå Error en la prueba:', error.message);
        if (error.response) {
            console.error('Respuesta:', error.response.data);
        }
    }
}

console.log('üßπ PRUEBA DE NOTIFICACIONES CON T√çTULOS LIMPIOS');
console.log('=' .repeat(55));
console.log('Esta prueba verifica que los t√≠tulos sin emojis');
console.log('permitan que las notificaciones se guarden correctamente\n');

probarNotificacionesSinEmojis();
